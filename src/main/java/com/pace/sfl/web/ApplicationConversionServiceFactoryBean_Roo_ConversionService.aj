// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.pace.sfl.web;

import com.pace.sfl.domain.Account;
import com.pace.sfl.domain.UserProfile;
import com.pace.sfl.domain.ZawodnikZuzlowy;
import com.pace.sfl.service.AccountService;
import com.pace.sfl.service.UserProfileService;
import com.pace.sfl.service.ZawodnikZuzlowyService;
import com.pace.sfl.web.ApplicationConversionServiceFactoryBean;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AccountService ApplicationConversionServiceFactoryBean.accountService;
    
    @Autowired
    UserProfileService ApplicationConversionServiceFactoryBean.userProfileService;
    
    @Autowired
    ZawodnikZuzlowyService ApplicationConversionServiceFactoryBean.zawodnikZuzlowyService;
    
    public Converter<Account, String> ApplicationConversionServiceFactoryBean.getAccountToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.pace.sfl.domain.Account, java.lang.String>() {
            public String convert(Account account) {
                return new StringBuilder().append(account.getUsername()).append(' ').append(account.getEmail()).append(' ').append(account.getPassword()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Account> ApplicationConversionServiceFactoryBean.getIdToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.pace.sfl.domain.Account>() {
            public com.pace.sfl.domain.Account convert(java.math.BigInteger id) {
                return accountService.findAccount(id);
            }
        };
    }
    
    public Converter<String, Account> ApplicationConversionServiceFactoryBean.getStringToAccountConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.pace.sfl.domain.Account>() {
            public com.pace.sfl.domain.Account convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Account.class);
            }
        };
    }
    
    public Converter<UserProfile, String> ApplicationConversionServiceFactoryBean.getUserProfileToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.pace.sfl.domain.UserProfile, java.lang.String>() {
            public String convert(UserProfile userProfile) {
                return new StringBuilder().append(userProfile.getCity()).toString();
            }
        };
    }
    
    public Converter<BigInteger, UserProfile> ApplicationConversionServiceFactoryBean.getIdToUserProfileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.pace.sfl.domain.UserProfile>() {
            public com.pace.sfl.domain.UserProfile convert(java.math.BigInteger id) {
                return userProfileService.findUserProfile(id);
            }
        };
    }
    
    public Converter<String, UserProfile> ApplicationConversionServiceFactoryBean.getStringToUserProfileConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.pace.sfl.domain.UserProfile>() {
            public com.pace.sfl.domain.UserProfile convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), UserProfile.class);
            }
        };
    }
    
    public Converter<ZawodnikZuzlowy, String> ApplicationConversionServiceFactoryBean.getZawodnikZuzlowyToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.pace.sfl.domain.ZawodnikZuzlowy, java.lang.String>() {
            public String convert(ZawodnikZuzlowy zawodnikZuzlowy) {
                return new StringBuilder().append(zawodnikZuzlowy.getFname()).append(' ').append(zawodnikZuzlowy.getLname()).append(' ').append(zawodnikZuzlowy.getKsm()).toString();
            }
        };
    }
    
    public Converter<BigInteger, ZawodnikZuzlowy> ApplicationConversionServiceFactoryBean.getIdToZawodnikZuzlowyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.pace.sfl.domain.ZawodnikZuzlowy>() {
            public com.pace.sfl.domain.ZawodnikZuzlowy convert(java.math.BigInteger id) {
                return zawodnikZuzlowyService.findZawodnikZuzlowy(id);
            }
        };
    }
    
    public Converter<String, ZawodnikZuzlowy> ApplicationConversionServiceFactoryBean.getStringToZawodnikZuzlowyConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.pace.sfl.domain.ZawodnikZuzlowy>() {
            public com.pace.sfl.domain.ZawodnikZuzlowy convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), ZawodnikZuzlowy.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAccountToStringConverter());
        registry.addConverter(getIdToAccountConverter());
        registry.addConverter(getStringToAccountConverter());
        registry.addConverter(getUserProfileToStringConverter());
        registry.addConverter(getIdToUserProfileConverter());
        registry.addConverter(getStringToUserProfileConverter());
        registry.addConverter(getZawodnikZuzlowyToStringConverter());
        registry.addConverter(getIdToZawodnikZuzlowyConverter());
        registry.addConverter(getStringToZawodnikZuzlowyConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
